"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[1723],{3414:(e,n,t)=>{t.d(n,{Z:()=>r});var s=t(7294),o=t(9965),i=t(4996),a=t(5893);const r=e=>{let{alt:n,sources:t,style:r}=e;const[l,c]=(0,s.useState)(!1),d=e=>{"Escape"===e.key&&c(!1)};(0,s.useEffect)((()=>(l?document.addEventListener("keydown",d):document.removeEventListener("keydown",d),()=>{document.removeEventListener("keydown",d)})),[l]);return(0,a.jsx)("div",{className:"zoomable-image "+(l?"fullscreen":""),onClick:()=>{c(!l)},style:{width:"50%",margin:"0 auto",display:"flex",justifyContent:"center",...r},children:(0,a.jsx)(o.Z,{className:"zoomable-image-inner",alt:n,sources:{light:(0,i.Z)(t.light),dark:(0,i.Z)(t.dark)}})})}},3262:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>u});t(7294);var s=t(5893),o=t(1151),i=(t(9965),t(4996),t(3414)),a=t(2004),r=t.n(a);const l={},c="\ud83c\udfa8 Creating Flows",d={id:"getting-started/creating-flows",title:"\ud83c\udfa8 Creating Flows",description:"Compose",source:"@site/docs/getting-started/creating-flows.mdx",sourceDirName:"getting-started",slug:"/getting-started/creating-flows",permalink:"/getting-started/creating-flows",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"\ud83e\udd17 HuggingFace Spaces",permalink:"/getting-started/hugging-face-spaces"},next:{title:"Sign up and Sign in",permalink:"/guidelines/login"}},g={},u=[{value:"Compose",id:"compose",level:2},{value:"Fork",id:"fork",level:2},{value:"Build",id:"build",level:2}];function p(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",a:"a",strong:"strong"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"-creating-flows",children:"\ud83c\udfa8 Creating Flows"}),"\n",(0,s.jsx)(n.h2,{id:"compose",children:"Compose"}),"\n",(0,s.jsxs)(n.p,{children:["Creating flows with Langflow is easy. Drag sidebar components onto the canvas and connect them together to create your pipeline. Langflow provides a range of ",(0,s.jsx)(n.a,{href:"https://python.langchain.com/docs/modules/",children:"LangChain components"})," to choose from, including LLMs, prompt serializers, agents, and chains."]}),"\n",(0,s.jsx)(i.Z,{alt:"Docusaurus themed image",sources:{light:"img/langflow_canvas.png",dark:"img/langflow_canvas.png"}}),"\n",(0,s.jsx)(n.h2,{id:"fork",children:"Fork"}),"\n",(0,s.jsxs)(n.p,{children:["The easiest way to start with Langflow is by forking a ",(0,s.jsx)(n.strong,{children:"community example"}),". Forking an example stores a copy in your project collection, allowing you to edit and save the modified version as a new flow."]}),"\n",(0,s.jsx)("div",{style:{marginBottom:"20px",display:"flex",justifyContent:"center"},children:(0,s.jsx)(r(),{playing:!0,controls:!0,url:"/videos/langflow_fork.mp4"})}),"\n",(0,s.jsx)(n.h2,{id:"build",children:"Build"}),"\n",(0,s.jsx)(n.p,{children:"Building a flow means validating if the components have prerequisites fulfilled and are properly instantiated. When a chat message is sent, the flow will run for the first time, executing the pipeline."}),"\n",(0,s.jsx)("div",{style:{marginBottom:"20px",display:"flex",justifyContent:"center"},children:(0,s.jsx)(r(),{playing:!0,controls:!0,url:"/videos/langflow_build.mp4"})})]})}const h=function(e={}){const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(p,e)})):p(e)}},1151:(e,n,t)=>{t.d(n,{Zo:()=>r,ah:()=>i});var s=t(7294);const o=s.createContext({});function i(e){const n=s.useContext(o);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const a={};function r({components:e,children:n,disableParentContext:t}){let r;return r=t?"function"==typeof e?e({}):e||a:i(e),s.createElement(o.Provider,{value:r},n)}}}]);